{"version":3,"file":"static/js/163.73bd5e59.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","redux/contacts/operations.js","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","redux/contacts/slice.js","components/Filter/Filter.jsx","redux/contacts/selectors.js","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"name\":\"ContactList_name__UCkFW\",\"number\":\"ContactList_number__2af8f\",\"button\":\"ContactList_button__7kL4l\"};","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n//axios.defaults.baseURL = 'https://6404764980d9c5c7bac857c8.mockapi.io/';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, thunkAPI) => {\n    try {\n      const response = await axios.get('/contacts');\n      return response.data;\n    } catch (event) {\n      return thunkAPI.rejectWithValue(event.message);\n    }\n  }\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async ({ name, number }, thunkAPI) => {\n    try {\n      const response = await axios.post('/contacts', {\n        name,\n        number,\n      });\n      return response.data;\n    } catch (event) {\n      return thunkAPI.rejectWithValue(event.message);\n    }\n  }\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (id, thunkAPI) => {\n    try {\n      const response = await axios.delete(`/contacts/${id}`);\n      return response.data;\n    } catch (event) {\n      return thunkAPI.rejectWithValue(event.message);\n    }\n  }\n);","import css from './ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts);\n  const filter = useSelector(state => state.contacts.filter);\n\n  const filteredContact = contacts.filter(\n    contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n      contact.number.includes(filter)\n  );\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id))\n      .then(() => {\n        dispatch(fetchContacts());\n      })\n      .catch(error => {\n        console.log(`Error: ${error.message}`);\n      });\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <table>\n      <tbody className={css.list}>\n        {filteredContact.map(({ id, name, number }) => (\n          <tr key={id} id={id} className={css.item}>\n            <td className={css.name}>{name}:</td>\n            <td className={css.number}>{number}</td>\n            <td>\n              <button\n                className={css.button}\n                type=\"submit\"\n                onClick={() => handleDeleteContact(id)}\n              >\n                Delete\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }).isRequired\n  ),\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"username\":\"ContactForm_username__kUSrl\",\"name\":\"ContactForm_name__ZqciK\",\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { useAuth } from 'hooks';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const { user } = useAuth();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const normalizationName = name.toLowerCase();\n\n    const alreadyInContacts = contacts.some(\n      ({ name }) => name.toLocaleLowerCase() === normalizationName\n    );\n    if (alreadyInContacts) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <p className={css.username}>\n        Welcome, <span className={css.name}>{user.name}</span> !\n      </p>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label className={css.label}>\n          Name\n          <input\n            className={css.input}\n            onChange={handleChange}\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n\n        <label className={css.label}>\n          Number\n          <input\n            className={css.input}\n            onChange={handleChange}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button className={css.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Filter_box__d3XyP\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { createSlice } from '@reduxjs/toolkit';\nimport { createAction } from '@reduxjs/toolkit';\nimport { logOut } from 'redux/auth/operations';\nimport { fetchContacts, addContact, deleteContact } from './operations';\n\nconst handlePending = state => {\n  state.isLoading = true;\n};\n\nconst handleRejected = (state, action) => {\n  state.isLoading = false;\n  state.error = action.payload;\n};\n\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    contacts: [],\n    filter: '',\n    loading: false,\n    error: null,\n  },\n  reducers: {\n    filteredContact(state, action) {\n      state.filter = action.payload;\n    },\n  },\n  extraReducers: {\n    [fetchContacts.pending]: handlePending,\n    [addContact.pending]: handlePending,\n    [deleteContact.pending]: handlePending,\n    [fetchContacts.rejected]: handleRejected,\n    [addContact.rejected]: handleRejected,\n    [deleteContact.rejected]: handleRejected,\n    [fetchContacts.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.error = null;\n      state.contacts = action.payload;\n    },\n    [addContact.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.error = null;\n      state.contacts.push(action.payload);\n    },\n    [deleteContact.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.error = null;\n      state.contacts = state.contacts.filter(\n        contact => contact.id !== action.payload\n      );\n    },\n    [logOut.fulfilled](state) {\n      state.items = [];\n      state.error = null;\n      state.isLoading = false;\n    },\n  },\n});\n\nexport const contactsReducer = contactsSlice.reducer;\n\nexport const filteredContact = createAction(\n  'contacts/filteredContact',\n  filter => {\n    return {\n      payload: filter,\n    };\n  }\n);\n","import css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { filteredContact } from 'redux/contacts/slice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    dispatch(filteredContact(event.target.value));\n  };\n\n  return (\n    <div className={css.box}>\n      <label className={css.label}>\n        Find contacts by name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"filter\"\n          onChange={handleFilterChange}\n          placeholder=\"Search contact\"\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","export const selectLoading = state => state.contacts.loading;\n\n//export const selectFilter = state => state.tasks.filter;\n\nexport const selectAllContacts = state => state.contactss.items;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <div style={{ color: '#f2e9e4' }}>\n        {isLoading && 'Request in progress...'}\n      </div>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["fetchContacts","createAsyncThunk","_","thunkAPI","axios","response","data","rejectWithValue","message","addContact","name","number","deleteContact","id","dispatch","useDispatch","contacts","useSelector","state","filter","filteredContact","contact","toLowerCase","includes","useEffect","className","css","map","type","onClick","then","catch","error","console","log","handleDeleteContact","user","useAuth","useState","setName","setNumber","handleChange","event","target","value","onSubmit","preventDefault","normalizationName","some","toLocaleLowerCase","alert","onChange","pattern","title","required","handlePending","isLoading","handleRejected","action","payload","createSlice","initialState","loading","reducers","extraReducers","pending","rejected","fulfilled","push","logOut","items","reducer","createAction","placeholder","selectLoading","Tasks","Helmet","style","color"],"sourceRoot":""}